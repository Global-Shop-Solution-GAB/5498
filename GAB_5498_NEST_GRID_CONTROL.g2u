Program.Sub.ScreenSU.Start
Gui.frmNest..Create
Gui.frmNest..Caption("Nest Grid Control")
Gui.frmNest..Size(15555,5370)
Gui.frmNest..MinX(0)
Gui.frmNest..MinY(0)
Gui.frmNest..Position(0,0)
Gui.frmNest..BackColor(-2147483633)
Gui.frmNest..MousePointer(0)
Gui.frmNest..Event(UnLoad,frmNest_UnLoad)
Gui.frmNest.gsgcNest.Create(GsGridControl)
Gui.frmNest.gsgcNest.Size(14850,4335)
Gui.frmNest.gsgcNest.Position(225,180)
Gui.frmNest.gsgcNest.Event(RowCellClick,gsgcNest_RowCellClick)
Gui.frmNest.gsgcNest.Event(CellValueChanged,gsgcNest_CellValueChanged)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
Program.Sub.Preflight.End

Program.Sub.Main.Start
f.Intrinsic.UI.InvokeWaitDialog("Loading, please wait.")
f.Intrinsic.Control.Try
'F.ODBC.Connection!CON.OpenConnection(V.Ambient.PDSN,V.Ambient.PUser,V.Ambient.PPass)
v.Local.scc.Declare(string)
f.Intrinsic.String.Concat("GLOBAL_",v.Caller.CompanyCode,v.Local.scc)
f.ODBC.Connection!con.OpenConnection(v.Local.scc,"Master","master")
F.Intrinsic.Control.CallSub(SetContextMenus)
'F.Data.DataTable.CreateFromSQL("dtNest","con","SELECT DISTINCT FlexSchedule, Workcentre as 'WC', NestID, Material,GSSMaterial,TotalNoRuns,IFNULL(Completed,'N') As Comp, ProductionPackage as 'Package' FROM GAB_5498_NEST where FlexSchedule<>'' and Comp<>'Y'")
F.Data.DataTable.CreateFromSQL("dtNest","con","SELECT DISTINCT FlexSchedule, ''  as 'WC', NestID, rtrim(Material) as 'Material',rtrim(GSSMaterial) as 'GSSMaterial',TotalNoRuns,IFNULL(Completed,'N') As Comp, rtrim(ProductionPackage) as 'Package' FROM GCG_7967_TTB where FlexSchedule<>'' and Comp<>'Y'")
F.Data.DataTable.AddColumn("dtNest","Onhand","Float")
f.Data.DataTable.AddColumn("dtNest","PO","Float")
f.Data.DataTable.AddColumn("dtNest","Description","String")
f.Data.DataTable.AddColumn("dtNest","DueDate","Date")
f.Data.DataTable.AddColumn("dtNest","TotalRun","Float")
f.Data.DataTable.AddColumn("dtNest","Ready","String")
f.Data.DataTable.AddColumn("dtNest","Priority","String")
f.Data.DataTable.AddColumn("dtNest","Notes","String")
f.Data.DataTable.AddColumn("dtNest","TopDate","Date")
f.Data.DataTable.AddColumn("dtNest","ParentNest","String")
F.Data.DataTable.CreateFromSQL("dtFull","con","SELECT FlexSchedule, WORKORDER, PRODUCTIONPACKAGE, NestID, Material,GSSMaterial,TotalNoRuns,IFNULL(Completed,'N') AS Comp FROM GCG_7967_TTB where FlexSchedule<>'' and Comp<>'Y'")
'F.Data.DataTable.CreateFromSQL("dtFull","con","SELECT FlexSchedule, WORKORDER, PRODUCTIONPACKAGE, Workcentre as 'WC', NestID, Material,GSSMaterial,TotalNoRuns,IFNULL(Completed,'N') AS Comp FROM GCG_7967_TTB where FlexSchedule<>'' and Comp<>'Y'")
F.Data.DataTable.CreateFromSQL("dtInv","con","SELECT PART, QTY_ONHAND, QTY_ONORDER_PO, DESCRIPTION_2 FROM V_INVENTORY_ALL")
F.Data.DataTable.CreateFromSQL("dtJob","con","SELECT JOB, SUFFIX, PRIORITY FROM JOB_HEADER")
F.Data.DataTable.CreateFromSQL("dtOper","con","SELECT JOB, SUFFIX, SEQ, DATE_DUE, FLAG_CLOSED FROM V_JOB_OPERATIONS")
F.Data.DataTable.CreateFromSQL("dtNote","con","SELECT * FROM GCG_7967_TTB_NOTES")
f.Data.DataTable.CreateFromSQL("dtFlex","con","SELECT DISTINCT SCHEDULE, SCHEDULE_SUFFIX, LABOR_WC FROM V_JOB_CT_FLX_SCHD")

V.Local.lRows.Declare(Long)
v.Local.i.Declare(Long)
v.Local.j.Declare(long)
v.Local.fPOQty.Declare(Float)
v.Local.fqtyonhd.Declare(Float)
v.Local.fqtyReq.Declare(Float)
v.Local.ssql.Declare(String)
v.Local.sSearch.Declare(string)
v.Local.sDescription2.Declare(string)
v.Local.sWC.Declare(String)
V.Local.sWORet.Declare(String)
V.Local.sWOArray.Declare(string)
V.Local.sWO.Declare(string)
v.Local.sWOHead.Declare(String)
v.Local.sWOSuffix.Declare(String)
v.Local.dDueDate.Declare(Date)
v.Local.sStatus.Declare(string)
v.Local.dEarlyDueDate.Declare(date)
v.Local.sProdPack.Declare(string)
v.Local.sret.Declare(string)
v.Local.spriority.Declare(string)
V.Local.sNotes.Declare(string)
v.Local.lRows.Set(v.DataTable.dtNest.rowcount)
v.Local.dparentdate.Declare(date)
v.Local.sparentnest.Declare(string)
v.Local.spreviousnest.Declare(string)
f.Data.Dictionary.Create("dict")
f.Data.Dictionary.SetDefaultReturn("dict","NONE")
f.Intrinsic.Math.Sub(v.Local.lRows,1,v.Local.lRows)
f.Intrinsic.Control.For(v.Local.i,0,v.Local.lRows,1)         
	'Set Parent Nest
	f.Intrinsic.String.Split(v.DataTable.dtNest(v.Local.i).NESTID!FieldVal,"_",v.Local.sparentnest)
	f.Data.DataTable.SetValue("dtNest",v.Local.i,"ParentNest",v.Local.sparentnest(0))
	
	'Set Workcentre
	f.Intrinsic.String.Build("Schedule='{0}' and Schedule_Suffix='000'",v.DataTable.dtNest(v.Local.i).FlexSchedule!FieldValString,v.Local.sSearch)
	f.Data.DataTable.Select("dtFlex",v.Local.sSearch,v.local.sret)
	f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"***NORETURN***")
		F.Intrinsic.String.Split(V.Local.sret,"*!*",V.Local.sret)
		F.Intrinsic.Control.If(V.Local.sret.UBound,=,0)
			f.Data.DataTable.SetValue("dtNest",v.Local.i,"WC",v.DataTable.dtFlex(v.Local.sret).LABOR_WC!FIELDVAL)
		F.Intrinsic.Control.Else
			f.Data.DataTable.SetValue("dtNest",v.Local.i,"WC","Multi")
		F.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	
	'Set Part/MAterial values first
	'Lookup record
	f.Intrinsic.String.Build("part='{0}'",v.DataTable.dtNest(v.Local.i).GSSMaterial!FieldValString,v.Local.sSearch)
	f.Data.DataTable.Select("dtInv",v.Local.sSearch,v.local.sret)
	
	'Set onhand QTY
	f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"***NORETURN***")
		v.Local.fQtyOnhd.Set(v.DataTable.dtInv(v.Local.sret).QTY_ONHAND!FIELDVAL)
		f.Data.DataTable.SetValue("dtNest",v.Local.i,"Onhand",v.Local.fqtyonhd)
	f.Intrinsic.Control.EndIf

	'Set PO QTY
	f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"***NORETURN***")
		v.Local.fPOQty.Set(v.DataTable.dtInv(v.Local.sret).QTY_ONORDER_PO!FIELDVAL)
		f.Data.DataTable.SetValue("dtNest",v.Local.i,"PO",v.Local.fPOQty)
	f.Intrinsic.Control.EndIf

	'Get Description 2
	f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"***NORETURN***")
		v.Local.sDescription2.Set(v.DataTable.dtInv(v.Local.sret).DESCRIPTION_2!FIELDVAL)
		f.Data.DataTable.SetValue("dtNest",v.Local.i,"PO",v.Local.fPOQty)
	f.Intrinsic.Control.EndIf

	'Next set due date/priority for the flex schedule
	'Get Due Date and determine readiness
	f.Intrinsic.Control.If(v.DataTable.dtLoop.Exists)
		f.Data.DataTable.Close("dtLoop")
		f.Data.DataView.Close("dtFull","dvFull")
	f.Intrinsic.Control.EndIf
	f.Intrinsic.String.Build("NestID='{0}'",v.DataTable.dtNest(v.Local.i).NestID!FieldValString,v.Local.sSearch)
	f.Data.dataview.create("dtFull","dvFull",22,v.Local.sSearch,"NestID ASC")

	f.Data.DataView.ToDataTable("dtFull","dvFull","dtLoop")
	f.Intrinsic.Control.For(v.Local.j,0,v.datatable.dtLoop.RowCount--,1)
		'Split the WO by - to get all three values
		F.Intrinsic.String.Split(V.DataTable.dtLoop(v.Local.j).WorkOrder!fieldval,"-",v.Local.sWO)
		V.Local.sWOHead.Set(V.Local.sWO(0))
		V.Local.sWOSuffix.Set(V.Local.sWO(1))
		
		'Grab Priority, if greater than the last, set that accordingly
		f.Intrinsic.String.Build("JOB='{0}' AND SUFFIX='{1}'",v.Local.sWOHead,v.Local.sWOSuffix,v.Local.sSearch)
		f.Data.DataTable.Select("dtJOB",v.Local.sSearch,v.local.sret)
		f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"***NORETURN***")
			V.Local.sret.Set(v.DataTable.dtJOB(v.Local.sret).PRIORITY!FIELDVAL)
			f.Intrinsic.Control.If(v.Local.sret,>,v.Local.spriority)
				v.Local.spriority.Set(v.Local.sret)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
		
		'Get Due Date
		f.Intrinsic.String.Build("JOB='{0}' AND SUFFIX='{1}' AND SEQ='000300' ",v.Local.sWOHead,v.Local.sWOSuffix,v.Local.sSearch)
		f.Data.DataTable.Select("dtOPER",v.Local.sSearch,v.local.sret)
		f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"***NORETURN***")
			V.Local.dDueDate.Set(v.DataTable.dtOper(v.Local.sret).DATE_DUE!FIELDVAL)
		F.Intrinsic.Control.Else
			V.Local.dDueDate.Set("1900-01-01")
		f.Intrinsic.Control.EndIf

		'Select if material has been issued.
		f.Intrinsic.String.Build("JOB='{0}' AND SUFFIX='{1}' AND SEQ='000200' ",v.Local.sWOHead,v.Local.sWOSuffix,v.Local.sSearch)
		f.Data.DataTable.Select("dtOPER",v.Local.sSearch,v.local.sret)
		f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"***NORETURN***")
			F.Intrinsic.Control.If(v.DataTable.dtOper(v.Local.sret).FLAG_CLOSED!FIELDVALtrim,=,"Y")
				V.Local.sStatus.set("Ready")
			F.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf

		F.Intrinsic.Control.if(V.Local.dEarlyDueDate,>,V.Local.dDueDate)
			V.Local.dEarlyDueDate.set(V.Local.dDueDate)
			f.Intrinsic.Control.If(v.dictionary.dict![v.Local.sparentnest(0)],=,"NONE")
				f.Data.Dictionary.AddItem("dict",v.Local.sparentnest(0),v.Local.dDueDate)
			f.Intrinsic.Control.Else
				'f.Intrinsic.Debug.ShowCallerInfo
				F.Intrinsic.Control.If(v.Local.dDueDate,<,v.dictionary.dict![v.Local.sparentnest(0)])
					f.Data.Dictionary.RemoveItem("dict",v.Local.sparentnest(0))
					f.Data.Dictionary.AddItem("dict",v.Local.sparentnest(0),v.Local.dDueDate)
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(V.Local.j)
	
	f.Data.DataTable.SetValue("dtNest",v.Local.i,"DueDate",v.Local.dEarlyDueDate)
	f.Data.DataTable.SetValue("dtNest",v.Local.i,"Ready",v.Local.sStatus)
	f.Data.DataTable.SetValue("dtNest",v.Local.i,"Priority",v.Local.spriority)
	V.Local.spriority.Set("")
	
	'Search for Nest Info
	'Total Run QTY
	f.Intrinsic.String.Build("NestID='{0}'",v.DataTable.dtNest(v.Local.i).NestID!FieldValString,v.Local.sSearch)
	f.Data.DataTable.Select("dtFull",v.Local.sSearch,v.local.sret)
'	f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"***NORETURN***")
'		v.Local.fqtyReq.Set(v.DataTable.dtFull(v.Local.sret).TotalNoRuns!FIELDVAL)
'		f.Data.DataTable.SetValue("dtNest",v.Local.i,"TotalNoRuns",v.Local.fqtyReq)
'	f.Intrinsic.Control.EndIf
	
	'Production Package link	
'	f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"***NORETURN***")
'		v.Local.sProdPack.Set(v.DataTable.dtFull(v.Local.sret).ProductionPackage!FIELDVAL)
'		f.Data.DataTable.SetValue("dtNest",v.Local.i,"ProductionPackage",v.Local.sProdPack)
'	f.Intrinsic.Control.EndIf

	'Notes	
	f.Intrinsic.String.Build("NestID='{0}'",v.DataTable.dtNest(v.Local.i).NestID!FieldValString,v.Local.sSearch)
	f.Data.DataTable.Select("dtNote",v.Local.sSearch,v.local.sret)
	f.Intrinsic.Control.If(v.Local.sret.Trim,<>,"***NORETURN***")
		v.Local.sNotes.Set(v.DataTable.dtNote(v.Local.sret).Notes!FIELDVALTRIM)
		f.Data.DataTable.SetValue("dtNest",v.Local.i,"Notes",v.Local.sNotes)
	f.Intrinsic.Control.EndIf
	
	'Reset the due date to something far out and unrealistic
	
	F.Intrinsic.Date.DateAdd("D",999,V.Ambient.Date,V.Local.dEarlyDueDate)
	V.Local.sStatus.Set("Not Ready")
	v.Local.spreviousnest.Set(v.Local.sparentnest(0))
	
f.Intrinsic.Control.Next(v.Local.i)

f.Intrinsic.Control.For(v.Local.i,0,v.Local.lRows,1) 
	f.Intrinsic.String.Split(v.DataTable.dtNest(v.Local.i).NESTID!FieldVal,"_",v.Local.sparentnest)
	f.Intrinsic.Control.If(v.dictionary.dict![v.Local.sparentnest(0)],=,"NONE")
		F.Data.DataTable.SetValue("dtNest",v.Local.i,"DueDate","1900-01-01")
	F.Intrinsic.Control.Else
		F.Data.DataTable.SetValue("dtNest",v.Local.i,"DueDate",v.dictionary.dict![v.Local.sparentnest(0)])
	F.Intrinsic.Control.EndIf
f.Intrinsic.Control.Next(v.Local.i)

gui.frmNest.gsgcNest.DataSource("dtNest")
gui.frmNest.gsgcNest.AddGridviewFromDatatable("GVNest","dtNest")
gui.frmNest.gsgcNest.SetGridviewProperty("GVNest","OptionsViewShowGroupPanel","True")
gui.frmNest.gsgcNest.SetGridviewProperty("GVNest","OptionsFindAlwaysVisible","True")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","Package","ReadOnly","True")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","Package","AllowEdit","False")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","Package","CellForeColor","Blue")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","FlexSchedule","AllowEdit","False")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","NestID","AllowEdit","False")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","Material","AllowEdit","False")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","GSSMaterial","AllowEdit","False")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","GSSMaterial","CellForeColor","Blue")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","TotalNoRuns","AllowEdit","False")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","TotalNoRuns","MinWidth","30")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","TotalNoRuns","Width","30")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","Comp","AllowEdit","False")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","Comp","MinWidth","40")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","Comp","Width","40")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","Onhand","AllowEdit","False")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","Onhand","MinWidth","30")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","Onhand","Width","30")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","PO","AllowEdit","False")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","PO","MinWidth","30")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","PO","Width","30")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","DueDate","AllowEdit","False")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","Ready","AllowEdit","False")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","Ready","MinWidth","50")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","Ready","Width","50")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","Priority","AllowEdit","False")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","Priority","MinWidth","40")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","Priority","Width","40")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","WC","AllowEdit","False")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","WC","MinWidth","40")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","WC","Width","40")
GUI.frmNest.gsgcNest.SetColumnProperty("GVNest","TopDate","Visible","False")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","ParentNest","Visible","False")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","TotalRun","Visible","False")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","Description","Visible","False")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","Notes","ReadOnly","False")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","Notes","CellBackColor","LightYellow")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","Notes","MinWidth","200")
gui.frmNest.gsgcNest.SetColumnProperty("GVNest","Notes","Width","200")

gui.frmNest.gsgcNest.SetColumnProperty("GVNest","DueDate","Displaycustomnumeric","d")

f.Data.DataView.Create("dtNest","dvNest")

f.Intrinsic.Control.For(v.Local.i,0,v.Local.lRows,1) 
'Variable.DataView.datatablename!dataviewname (row number).fieldname!propert   
	f.Intrinsic.Control.If(v.datatable.dtNest(v.local.i).Priority!FieldVal,=,"999")
		gui.frmNest.gsgcNest.SetRowAppearance("GVNest",v.Local.i,"backcolor",v.Color.LtRed)
	f.Intrinsic.Control.ElseIf(v.datatable.dtNest(v.local.i).priority!FieldVal,=,"998")
		gui.frmNest.gsgcNest.SetRowAppearance("GVNest",v.Local.i,"backcolor",v.Color.Orange)
	f.Intrinsic.Control.ElseIf(v.datatable.dtNest(v.local.i).priority!Fieldval,=,"997")
		gui.frmNest.gsgcNest.SetRowAppearance("GVNest",v.Local.i,"backcolor",v.Color.Yellow)
	f.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(v.Local.i)
f.Intrinsic.UI.CloseWaitDialog

gui.frmNest..Show
gui.frmNest.gsgcNest.anchor(15)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
f.Intrinsic.Control.EndTry

Program.Sub.Main.End

Program.Sub.gsgcNest_RowCellClick.Start
v.Local.scolumn.Declare(string)
V.Local.sTemp.Declare(String)
V.Local.sTemp.Set("")
v.Local.lColumn.Declare(long)
v.Local.sRowHandle.Declare(string)
v.Local.sRowIndex.Declare(string)
v.Local.sX.Declare(string)
v.Local.sY.Declare(string)
v.Local.sCellValue.Declare(string)
v.Local.lRet.Declare(long)
v.Local.sRowHandle.Set(v.Args.RowHandle)
v.Local.sRowIndex.Set(v.Args.rowindex)
v.Local.sX.Set(v.Args.x)
v.Local.sY.Set(v.Args.y)
v.Local.sCellValue.Set(v.Args.cellvalue)
v.Local.scolumn.Set(v.Args.column)
v.Local.bFile.Declare(Boolean)

f.Intrinsic.Control.Try
	f.Intrinsic.Control.If(v.Args.column,=,"Package")
		f.Intrinsic.File.Exists(v.Local.sCellValue,v.Local.bFile)
		f.Intrinsic.Control.If(v.Local.bFile,=,true)
			gui.frmNest.gsgcNest.getcolumnindexbyname("GVNest","Package",v.Local.lColumn)
			F.Intrinsic.task.ShellExec(V.Caller.Handle,"OPEN",V.Local.sCellValue.StrLit,"","",5)
		f.Intrinsic.Control.endif
	f.Intrinsic.Control.ElseIf(v.Args.column,=,"GSSMaterial")
		gui.frmNest.gsgcNest.getcolumnindexbyname("GVNest","GSSMaterial",v.Local.lColumn)	
		F.Intrinsic.String.Concat(V.Local.sCellValue,"!*!","","!*!","M",V.Local.sTemp)
		F.Global.General.CallWrapperSync(300011,V.Local.sTemp)
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.gsgcNest_RowCellClick.End

Program.Sub.frmNest_UnLoad.Start
f.ODBC.Connection!CON.close
f.Intrinsic.Control.End
Program.Sub.frmNest_UnLoad.End

Program.Sub.SetContextMenus.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	GUI.frmNest..ContextMenuCreate("ctxAll")
	Gui.frmNest.gsgcNest.ContextMenuAttach("ctxAll")
	gui.frmNest..ContextMenuAddItem("ctxAll","Export",0,"Export")
	Gui.frmNest..ContextMenuSetItemEventHandler("ctxAll","Export","MenuClickExport")
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End 
F.Intrinsic.Control.EndTry
Program.Sub.SetContextMenus.End

Program.Sub.MenuClickExport.Start
V.Local.sFileExport.Declare(string)
V.Local.bExcel.Declare(boolean)
V.Local.bFileLocked.Declare(boolean)
V.Local.sMsg.Declare(string)
v.Local.sDate.Declare(string)
f.Intrinsic.String.Format(v.Ambient.Date,"YYYYMMDD",v.Local.sDate)
F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
f.Intrinsic.Control.If(v.Local.bExcel)
	F.Intrinsic.String.Build("{0}\GAB_4840_CashFlow_{1}_Export.xlsx",V.Caller.LocalGssTempDir,v.Local.sDate,V.Local.sFileExport)
	F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
	F.Intrinsic.Control.If(V.Local.bFileLocked)
		F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
		F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
	F.Intrinsic.Control.Else
		Gui.frmNest.gsgcNest.Export(V.Local.sFileExport,"xlsx")
		F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
	F.Intrinsic.Control.EndIf
f.Intrinsic.Control.Else
	f.Intrinsic.UI.Msgbox("Excel Not Found.")
f.Intrinsic.Control.EndIf
Program.Sub.MenuClickExport.End

Program.Sub.gsgcNest_CellValueChanged.Start
V.Local.SNOTES.Declare(string)
V.Local.sNestID.Declare(string)
v.Local.SSQL.Declare(String)
v.Local.sret.Declare(string)

F.Intrinsic.Control.SelectCase(V.Args.column)
	F.Intrinsic.Control.Case("Notes")
			Gui.frmNest.gsgcNest.GetCellValueByColumnName("GVNest","NestID",V.Args.RowIndex,V.Local.sNestID)
			Gui.frmNest.gsgcNest.GetCellValueByColumnName("GVNest","Notes",V.Args.RowIndex,V.Local.SNOTES)
			F.Intrinsic.String.Build("SELECT * FROM GCG_7967_TTB_NOTES WHERE NestID = '{0}';",V.Local.sNestID,V.Local.sSQL)
			f.ODBC.Connection!con.executeandreturn(v.Local.SSQL,v.Local.sret)
			f.Intrinsic.Control.If(v.Local.sret.Trim,=,"")
				F.Intrinsic.String.Build("INSERT INTO GCG_7967_TTB_NOTES (NestID,Notes)  VALUES('{0}','{1}');",V.Local.sNestID,V.Local.SNOTES,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			f.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE GCG_7967_TTB_NOTES SET NOTES = '{0}' WHERE NestID = '{1}';",V.Local.SNOTES,V.Local.sNestID,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			f.Intrinsic.Control.EndIf
f.Intrinsic.Control.EndSelect

Program.Sub.gsgcNest_CellValueChanged.End

Program.Sub.Comments.Start
${$0$}$$}$SUPERVSR$}$22/02/2017 11:24:46 a.m.$}$False
Program.Sub.Comments.End